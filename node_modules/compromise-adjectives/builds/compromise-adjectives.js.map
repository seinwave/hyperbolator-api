{"version":3,"file":"compromise-adjectives.js","sources":["../src/toAdverb.js","../src/toNoun.js","../src/toVerb.js","../src/index.js"],"sourcesContent":["//turn 'quick' into 'quickly'\nconst not_matches = [/airs$/, /ll$/, /ee.$/, /ile$/, /y$/]\n\nconst irregulars = {\n  bad: 'badly',\n  good: 'well',\n  icy: 'icily',\n  idle: 'idly',\n  male: 'manly',\n  public: 'publicly',\n  simple: 'simply',\n  single: 'singly',\n  special: 'especially',\n  straight: 'straight',\n  vague: 'vaguely',\n  whole: 'wholly',\n}\nconst dontChange = ['best', 'early', 'hard', 'fast', 'wrong', 'well', 'late', 'latter', 'little', 'long', 'low'].reduce(\n  (h, c) => {\n    h[c] = true\n    return h\n  },\n  {}\n)\n\nconst transforms = [\n  {\n    reg: /al$/i,\n    repl: 'ally',\n  },\n  {\n    reg: /ly$/i,\n    repl: 'ly',\n  },\n  {\n    reg: /(.{3})y$/i,\n    repl: '$1ily',\n  },\n  {\n    reg: /que$/i,\n    repl: 'quely',\n  },\n  {\n    reg: /ue$/i,\n    repl: 'uly',\n  },\n  {\n    reg: /ic$/i,\n    repl: 'ically',\n  },\n  {\n    reg: /ble$/i,\n    repl: 'bly',\n  },\n  {\n    reg: /l$/i,\n    repl: 'ly',\n  },\n]\n\nconst adj_to_adv = function(str) {\n  if (irregulars.hasOwnProperty(str) === true) {\n    return irregulars[str]\n  }\n  if (dontChange.hasOwnProperty(str) === true) {\n    return str\n  }\n  for (let i = 0; i < not_matches.length; i++) {\n    if (not_matches[i].test(str) === true) {\n      return null\n    }\n  }\n  for (let i = 0; i < transforms.length; i++) {\n    if (transforms[i].reg.test(str) === true) {\n      return str.replace(transforms[i].reg, transforms[i].repl)\n    }\n  }\n  return str + 'ly'\n}\n\nmodule.exports = adj_to_adv\n","//convert 'cute' to 'cuteness'\nconst irregulars = {\n  clean: 'cleanliness',\n  naivety: 'naivety',\n  hurt: 'hurt',\n}\n\nconst transforms = [\n  {\n    reg: /y$/,\n    repl: 'iness',\n  },\n  {\n    reg: /le$/,\n    repl: 'ility',\n  },\n  {\n    reg: /ial$/,\n    repl: 'y',\n  },\n  {\n    reg: /al$/,\n    repl: 'ality',\n  },\n  {\n    reg: /ting$/,\n    repl: 'ting',\n  },\n  {\n    reg: /ring$/,\n    repl: 'ring',\n  },\n  {\n    reg: /bing$/,\n    repl: 'bingness',\n  },\n  {\n    reg: /sing$/,\n    repl: 'se',\n  },\n  {\n    reg: /ing$/,\n    repl: 'ment',\n  },\n  {\n    reg: /ess$/,\n    repl: 'essness',\n  },\n  {\n    reg: /ous$/,\n    repl: 'ousness',\n  },\n]\n\nconst to_noun = function(w) {\n  if (irregulars.hasOwnProperty(w)) {\n    return irregulars[w]\n  }\n  const lastChar = w.charAt(w.length - 1)\n  if (lastChar === 'w' || lastChar === 's') {\n    return null\n  }\n  for (let i = 0; i < transforms.length; i++) {\n    if (transforms[i].reg.test(w) === true) {\n      return w.replace(transforms[i].reg, transforms[i].repl)\n    }\n  }\n  return w + 'ness'\n}\n\nmodule.exports = to_noun\n","//turn an adjective like 'soft' into a verb like 'soften'\n//(don't do words like 'green' -> 'greenen')\n\n//these are suffices that are usually too weird\nlet dontDo = ['c', 'e', 'g', 'l', 'n', 'r', 'w', 'y'].reduce((h, c) => {\n  h[c] = true\n  return h\n}, {})\n\nconst dontDoTwo = { ed: true, nt: true }\n\nconst blacklist = {\n  random: true,\n  wild: true,\n}\n\nconst irregulars = {\n  bored: 'bore',\n  red: 'redden',\n  sad: 'sadden',\n  fat: 'fatten',\n  small: 'shrink',\n  full: 'fill',\n  tired: 'tire',\n}\n\nconst toVerb = str => {\n  if (irregulars.hasOwnProperty(str) === true) {\n    return irregulars[str]\n  }\n  //don't bother with these:\n  if (str.length <= 3) {\n    return null\n  }\n  if (blacklist.hasOwnProperty(str) === true) {\n    return null\n  }\n  //suffixes to avoid\n  if (dontDo.hasOwnProperty(str[str.length - 1])) {\n    return null\n  }\n  let suffix = str.substr(str.length - 2)\n  if (dontDoTwo.hasOwnProperty(suffix) === true) {\n    return null\n  }\n\n  if (/e$/.test(str) === true) {\n    return str + 'n'\n  }\n  return str + 'en'\n}\nmodule.exports = toVerb\n","const toAdverb = require('./toAdverb')\nconst toNoun = require('./toNoun')\nconst toVerb = require('./toVerb')\n\nconst addMethods = function(Doc) {\n  /**  */\n  class Adjective extends Doc {\n    /** overload the original json with noun information */\n    json(options) {\n      let n = null\n      if (typeof options === 'number') {\n        n = options\n        options = null\n      }\n      let res = []\n      this.forEach(doc => {\n        let json = doc.json(options)[0]\n        let str = doc.text('reduced')\n        json.toAdverb = toAdverb(str)\n        json.toNoun = toNoun(str)\n        json.toVerb = toVerb(str)\n        res.push(json)\n      })\n      if (n !== null) {\n        return res[n]\n      }\n      return res\n    }\n    conjugate(n) {\n      let transform = this.world.transforms.adjectives\n      let arr = []\n      this.forEach(doc => {\n        let str = doc.text('reduced')\n        let obj = transform(str)\n        obj.Adverb = toAdverb(str)\n        obj.Noun = toNoun(str)\n        obj.Verb = toVerb(str)\n        arr.push(obj)\n      })\n      //support nth result\n      if (typeof n === 'number') {\n        return arr[n]\n      }\n      return arr\n    }\n\n    toSuperlative() {\n      let transform = this.world.transforms.adjectives\n      this.forEach(doc => {\n        let obj = transform(doc.text('reduced'))\n        doc.replaceWith(obj.Superlative, true)\n      })\n      return this\n    }\n    toComparative() {\n      let transform = this.world.transforms.adjectives\n      this.forEach(doc => {\n        let obj = transform(doc.text('reduced'))\n        doc.replaceWith(obj.Comparative, true)\n      })\n      return this\n    }\n    toAdverb() {\n      this.forEach(doc => {\n        let adverb = toAdverb(doc.text('reduced'))\n        doc.replaceWith(adverb, true)\n      })\n      return this\n    }\n    toVerb() {\n      this.forEach(doc => {\n        let verb = toVerb(doc.text('reduced'))\n        doc.replaceWith(verb, true)\n      })\n      return this\n    }\n    toNoun() {\n      this.forEach(doc => {\n        let noun = toNoun(doc.text('reduced'))\n        doc.replaceWith(noun, true)\n      })\n      return this\n    }\n  }\n\n  /** grab all the adjectives */\n  Doc.prototype.adjectives = function(n) {\n    let m = this.match('#Adjective')\n    //grab (n)th result\n    if (typeof n === 'number') {\n      m = m.get(n)\n    }\n    return new Adjective(m.list, this, this.world)\n  }\n}\nmodule.exports = addMethods\n"],"names":["not_matches","irregulars","bad","good","icy","idle","male","simple","single","special","straight","vague","whole","dontChange","reduce","h","c","transforms","reg","repl","adj_to_adv","str","hasOwnProperty","i","length","test","replace","clean","naivety","hurt","to_noun","w","lastChar","charAt","dontDo","dontDoTwo","ed","nt","blacklist","random","wild","bored","red","sad","fat","small","full","tired","toVerb","suffix","substr","addMethods","Doc","Adjective","options","n","res","forEach","doc","json","text","toAdverb","toNoun","push","transform","world","adjectives","arr","obj","Adverb","Noun","Verb","replaceWith","Superlative","Comparative","adverb","verb","noun","prototype","m","match","get","list"],"mappings":"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"}