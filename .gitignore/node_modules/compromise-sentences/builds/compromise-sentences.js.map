{"version":3,"file":"compromise-sentences.js","sources":["../src/mainClause.js","../src/parse.js","../src/methods/negate.js","../src/methods/punct.js","../src/methods/tense.js","../src/methods/index.js","../src/index.js"],"sourcesContent":["// if a clause starts with these, it's not a main clause\nconst subordinate = `(after|although|as|because|before|if|since|than|that|though|when|whenever|where|whereas|wherever|whether|while|why|unless|until|once)`\nconst relative = `(that|which|whichever|who|whoever|whom|whose|whomever)`\n\n//try to remove secondary clauses\nconst mainClause = function(og) {\n  let m = og.clone(true)\n  if (m.length === 1) {\n    return m\n  }\n  // if there's no verb?\n  m = m.if('#Verb')\n  if (m.length === 1) {\n    return m\n  }\n  // this is a signal for subordinate-clauses\n  m = m.ifNo(subordinate)\n  m = m.ifNo('^even (if|though)')\n  m = m.ifNo('^so that')\n  m = m.ifNo('^rather than')\n  m = m.ifNo('^provided that')\n  if (m.length === 1) {\n    return m\n  }\n  // relative clauses\n  m = m.ifNo(relative)\n  if (m.length === 1) {\n    return m\n  }\n\n  m = m.ifNo('(despite|during|before|through|throughout)')\n  if (m.length === 1) {\n    return m\n  }\n  // did we go too far?\n  if (m.length === 0) {\n    m = og\n  }\n  // choose the first one?\n  return m.eq(0)\n}\nmodule.exports = mainClause\n","const mainClause = require('./mainClause')\n\nconst parse = function(doc) {\n  let clauses = doc.clauses()\n  let main = mainClause(clauses)\n  let nouns = main.match('#Determiner? (#Noun|#Adjective)+').if('#Noun')\n  let verb = main.verbs().eq(0)\n  // match('(do|will)? not? #Verb+ not?').eq(0)\n  return {\n    subject: nouns.eq(0),\n    verb: verb,\n    object: verb.lookAhead('.*'),\n  }\n}\nmodule.exports = parse\n","const parse = require('../parse')\n\n/** he walks -> he did not walk */\nexports.toNegative = function() {\n  this.forEach(doc => {\n    let obj = parse(doc)\n    let vb = obj.verb.clone()\n    vb = vb.verbs().toNegative()\n    obj.verb.replaceWith(vb, false)\n  })\n  return this\n}\n/** he doesn't walk -> he walks */\nexports.toPositive = function() {\n  this.forEach(doc => {\n    let obj = parse(doc)\n    let vb = obj.verb.clone()\n    vb = vb.verbs().toPositive()\n    obj.verb.replaceWith(vb, false)\n  })\n  return this\n}\n","/** return sentences ending with '?' */\nexports.isQuestion = function() {\n  return this.filter(doc => {\n    let term = doc.lastTerm().termList(0)\n    return term.hasPost('?')\n  })\n}\n/** return sentences ending with '!' */\nexports.isExclamation = function() {\n  return this.filter(doc => {\n    let term = doc.lastTerm().termList(0)\n    return term.hasPost('!')\n  })\n}\n/** return sentences with neither a question or an exclamation */\nexports.isStatement = function() {\n  return this.filter(doc => {\n    let term = doc.lastTerm().termList(0)\n    return !term.hasPost('?') && !term.hasPost('!')\n  })\n}\n\n/** 'he is.' -> 'he is!' */\nexports.toExclamation = function() {\n  return this\n}\n/** 'he is.' -> 'he is?' */\nexports.toQuestion = function() {\n  return this\n}\n/** 'he is?' -> 'he is.' */\nexports.toStatement = function() {\n  return this\n}\n","const parse = require('../parse')\n\n/** he walks -> he walked */\nexports.toPastTense = function() {\n  this.forEach(doc => {\n    if (doc.has('#PastTense')) {\n      return\n    }\n    let obj = parse(doc)\n    let vb = obj.verb.clone()\n    vb = vb.verbs().toPastTense()\n    obj.verb.replaceWith(vb, false)\n    // trailing gerund/future/present are okay, but 'walked and eats' is not\n    if (obj.object && obj.object.found && obj.object.has('#PresentTense')) {\n      let verbs = obj.object.verbs()\n      verbs\n        .if('#PresentTense')\n        .verbs()\n        .toPastTense()\n    }\n  })\n  return this\n}\n\n/** he walked -> he walks */\nexports.toPresentTense = function() {\n  this.forEach(doc => {\n    let obj = parse(doc)\n    let isPlural = obj.verb.lookBehind('(i|we) (#Adverb|#Verb)?$').found\n    let vb = obj.verb.clone()\n    // 'i look', not 'i looks'\n    if (isPlural) {\n      //quick hack for copula verb - be/am\n      if (vb.has('(is|was|am|be)')) {\n        vb = vb.replace('will? (is|was|am|be)', 'am')\n      } else {\n        vb = vb.verbs().toInfinitive()\n      }\n    } else {\n      //'he looks'\n      vb = vb.verbs().toPresentTense()\n    }\n    obj.verb.replaceWith(vb, false)\n\n    // future is okay, but 'walks and ate' -> 'walks and eats'\n    if (obj.object && obj.object.found && obj.object.has('#PastTense')) {\n      let verbs = obj.object.verbs()\n      verbs\n        .if('#PastTense')\n        .verbs()\n        .toPresentTense()\n    }\n  })\n  return this\n}\n\n/**he walked -> he will walk */\nexports.toFutureTense = function() {\n  this.forEach(doc => {\n    let obj = parse(doc)\n    let vb = obj.verb.clone()\n    vb = vb.verbs().toFutureTense()\n    obj.verb.replaceWith(vb, false)\n    //Present is okay, but 'will walk and ate' -> 'will walk and eat'\n    if (obj.object && obj.object.found && obj.object.has('(#PastTense|#PresentTense)')) {\n      let verbs = obj.object.verbs()\n      verbs\n        .if('(#PastTense|#PresentTense)')\n        .verbs()\n        .toInfinitive()\n    }\n  })\n  return this\n}\n\n// toContinuous() {\n//   return this\n// }\n","module.exports = Object.assign({}, require('./negate'), require('./punct'), require('./tense'))\n","const parse = require('./parse')\nconst methods = require('./methods')\n\nconst addMethod = function(Doc) {\n  /**  */\n  class Sentences extends Doc {\n    constructor(list, from, world) {\n      list = list.map(p => p.clone(true))\n      super(list, from, world)\n    }\n\n    /** overload the original json with noun information */\n    json(options) {\n      let n = null\n      if (typeof options === 'number') {\n        n = options\n        options = null\n      }\n      options = options || { text: true, normal: true, trim: true, terms: true }\n      let res = []\n      this.forEach(doc => {\n        let json = doc.json(options)[0]\n        let obj = parse(doc)\n        json.subject = obj.subject.json(options)[0]\n        json.verb = obj.verb.json(options)[0]\n        json.object = obj.object.json(options)[0]\n        res.push(json)\n      })\n      if (n !== null) {\n        return res[n]\n      }\n      return res\n    }\n\n    /** the main noun of the sentence */\n    subjects() {\n      return this.map(doc => {\n        let res = parse(doc)\n        return res.subject\n      })\n    }\n\n    /** return sentences that are in passive-voice */\n    isPassive() {\n      return this.if('was #Adverb? #PastTense #Adverb? by') //haha\n    }\n\n    /** add a word to the start of this sentence */\n    prepend(str) {\n      this.forEach(doc => {\n        // repair the titlecase\n        let firstTerms = doc.match('^.')\n        firstTerms.not('#ProperNoun').toLowerCase()\n        // actually add the word\n        firstTerms.prepend(str)\n        // add a titlecase\n        firstTerms.terms(0).toTitleCase()\n      })\n      return this\n    }\n\n    /** add a word to the end of this sentence */\n    append(str) {\n      let hasEnd = /[.?!]\\s*$/.test(str)\n      this.forEach(doc => {\n        let end = doc.match('.$')\n        let lastTerm = end.termList(0)\n        let punct = lastTerm.post\n        if (hasEnd === true) {\n          punct = ''\n        }\n        // add punctuation to the end\n        end.append(str + punct)\n        // remove punctuation from the former last-term\n        lastTerm.post = ' '\n      })\n      return this\n    }\n  }\n  Object.assign(Sentences.prototype, methods)\n\n  /** overload original sentences() method and return Sentence class**/\n  Doc.prototype.sentences = function(n) {\n    let arr = []\n    this.list.forEach(p => {\n      arr.push(p.fullSentence())\n    })\n    //grab (n)th result\n    let s = new Sentences(arr, this, this.world)\n    if (typeof n === 'number') {\n      s = s.get(n)\n    }\n    return s\n  }\n  return Doc\n}\nmodule.exports = addMethod\n"],"names":["subordinate","relative","mainClause","og","m","clone","length","ifNo","eq","parse","doc","clauses","main","nouns","match","verb","verbs","subject","object","lookAhead","forEach","obj","vb","toNegative","replaceWith","toPositive","filter","term","lastTerm","termList","hasPost","has","toPastTense","found","isPlural","lookBehind","replace","toInfinitive","toPresentTense","toFutureTense","Object","assign","require$$0","require$$1","require$$2","addMethod","Doc","Sentences","list","from","world","map","p","options","n","text","normal","trim","terms","res","json","push","str","firstTerms","not","toLowerCase","prepend","toTitleCase","hasEnd","test","end","punct","post","append","prototype","methods","sentences","arr","fullSentence","s","get"],"mappings":"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"}